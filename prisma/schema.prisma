// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  name  String
  username String  @unique
  bio String?
  password String 
  posts Post[]
  likes Like[]
  comments Comment[]
  following Follow[] @relation("who follows")
  followers Follow[] @relation("who got followed")
  notifications        Notification[]  @relation("notificationReceiver")
  makeNotifications  Notification[] @relation("notificationActor")
  created DateTime @default(now())
}

model Post {
  id        Int     @id @default(autoincrement())
  content     String
  picture String
  user    User    @relation(fields: [userId], references: [id])
  userId  Int
  likes Like []
  comments Comment[]
  notifications Notification[]
  created DateTime @default(now())
}
  
model Like {
  id        Int     @id @default(autoincrement())
  post Post @relation(fields: [postId], references: [id])
  postId Int
  actor    User    @relation(fields: [actorId], references: [id])
  actorId  Int
  
  
}
model Comment {
     id     Int    @id @default(autoincrement())
     content String
     post   Post   @relation(fields: [postId], references: [id])
     postId Int
     commentor User   @relation(fields: [commentorId], references: [id])
     commentorId Int
     created DateTime @default(now())
 }
  

  model Follow {
     id        Int    @id @default(autoincrement())
     aPersonWhoFollow User   @relation("who follows", fields: [aPersonWhoFollowId ], references: [id])//follow tk thu 
     aPersonWhoFollowId Int
     aPersonWhoGotFollowed User   @relation("who got followed", fields: [aPersonWhoGotFollowedId ], references: [id])//follow khan ya tk thu
     aPersonWhoGotFollowedId Int
     created   DateTime @default(now())
     @@unique([ aPersonWhoFollowId , aPersonWhoGotFollowedId ])
 }

 model Notification {
     id        Int      @id @default(autoincrement())
     type      String   // "LIKE", "COMMENT", or "FOLLOW"
     read      Boolean  @default(false)
     receiver     User     @relation("notificationReceiver", fields: [receiverId], references: [id])
     receiverId    Int
     actor     User     @relation("notificationActor", fields: [actorId], references: [id])
     actorId   Int
     post      Post?    @relation(fields: [postId], references: [id])
     postId    Int?
     created   DateTime @default(now())
 }